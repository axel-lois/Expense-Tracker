{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","e","onDateChange","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","data","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","valueArray","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredDates","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","booleanButton","setBooleanButton","cancelButtonHandler","prevState","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","alert","type","min","step","onClick","NewExpense","enteredExpenseData","random","onAddExpense","STATIC_EXPENSES","App","setNewExpense","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.06330149.chunk.js","sourcesContent":["import './Card.css'\r\n\r\nfunction Card(props) {\r\n    const classes = 'card ' + props.className;\r\n    return (\r\n        <div className = {classes} > {props.children} </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\n\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const filterChangeHandler = (e) => {\r\n    props.onDateChange(e.target.value);\r\n  };\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={filterChangeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import './ExpenseDate.css'\r\n\r\nfunction ExpenseDate(props) {\r\n  const month = props.date.toLocaleString(\"en-us\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-us\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n  \r\n  return (\r\n    <div className = \"expense-date\">\r\n      <div className = \"expense-date__month\">{month}</div>\r\n      <div className = \"expense-date__day\">{day}</div>\r\n      <div className = \"expense-date__year\" >{year}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import \"./ExpenseItem.css\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\nfunction ExpenseItem(props) {\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date}></ExpenseDate>\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n        </div>\r\n        <div className=\"expense-item__price\">${props.amount}</div>\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport \"./ExpensesList.css\";\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.data.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\"> No expenses found.</h2>;\r\n  } else\r\n    return (\r\n      <ul className=\"expenses-list\">\r\n        {props.data.map((expense) => {\r\n          return (\r\n            <ExpenseItem\r\n              key={expense.id}\r\n              title={expense.title}\r\n              amount={expense.amount}\r\n              date={expense.date}\r\n            ></ExpenseItem>\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import React from \"react\";\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n  if (props.maxValue > 0) \r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%   ';\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\"> {props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React, { useState } from \"react\";\r\nimport \"./Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nconst Chart = (props) => {\r\n    let valueArray = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    let totalMaximum = Math.max(...valueArray);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  for(let expense of props.expenses) {\r\n      let expenseMonth = expense.date.getMonth();\r\n      chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import React, { useState } from \"react\";\r\nimport \"./Expenses.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\nfunction Expenses(props) {\r\n  const [filteredYear, setFilteredYear] = useState(\"2021\");\r\n\r\n  const dateChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredDates = props.expenses.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          selected={filteredYear}\r\n          onDateChange={dateChangeHandler}\r\n        ></ExpensesFilter>\r\n        <ExpensesChart expenses={filteredDates} ></ExpensesChart>\r\n        <ExpensesList data={filteredDates}></ExpensesList>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n  const [booleanButton, setBooleanButton] = useState(false);\r\n  // const [userInput, setUserInput] = useState({\r\n  //   EnteredTitle: \"\",\r\n  //   EnteredAmount: \"\",\r\n  //   EnteredDate: \"\",\r\n  // });\r\n\r\n  const titleChangeHandler = (e) => {\r\n    setEnteredTitle(e.target.value);\r\n\r\n    // setUserInput((prevState) => {\r\n    //   return {\r\n    //     ...prevState,\r\n    //     EnteredTitle: e.target.value,\r\n    //   };\r\n    // });\r\n  };\r\n\r\n  const amountChangeHandler = (e) => {\r\n    setEnteredAmount(e.target.value);\r\n\r\n    // setUserInput((prevState) => {\r\n    //   return {\r\n    //     ...prevState,\r\n    //     EnteredAmount: e.target.value,\r\n    //   };\r\n    // });\r\n  };\r\n\r\n  const dateChangeHandler = (e) => {\r\n    setEnteredDate(e.target.value);\r\n\r\n    // setUserInput((prevState) => {\r\n    //   return {\r\n    //     ...prevState,\r\n    //     EnteredDate: e.target.value,\r\n    //   };\r\n    // });\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    if (enteredTitle && enteredAmount && enteredDate) {\r\n      setBooleanButton((prevState) => !prevState);\r\n      props.onSaveExpenseData(expenseData);\r\n      setEnteredTitle(\"\");\r\n      setEnteredAmount(\"\");\r\n      setEnteredDate(\"\");\r\n    } else alert(\"All fields may have values.\");\r\n  };\r\n\r\n  const cancelButtonHandler = () => {\r\n    setBooleanButton((prevState) => !prevState);\r\n  };\r\n\r\n  if (!booleanButton) {\r\n    return (\r\n      <div>\r\n        <div className=\"new-expense__actions\">\r\n          <button type=\"button\" onClick={cancelButtonHandler}>\r\n            Add new expense\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else\r\n    return (\r\n      <form onSubmit={submitHandler}>\r\n        <div className=\"new-expense__controls\">\r\n          <div className=\"new-expense__control\">\r\n            <label>Title</label>\r\n            <input\r\n              type=\"text\"\r\n              value={enteredTitle}\r\n              onChange={titleChangeHandler}\r\n            />\r\n          </div>\r\n          <div className=\"new-expense__control\">\r\n            <label>Amount</label>\r\n            <input\r\n              value={enteredAmount}\r\n              type=\"number\"\r\n              min=\"0.01\"\r\n              step=\"0.01\"\r\n              onChange={amountChangeHandler}\r\n            />\r\n          </div>\r\n          <div className=\"new-expense__control\">\r\n            <label>Date</label>\r\n            <input\r\n              value={enteredDate}\r\n              type=\"date\"\r\n              min=\"2019-01-01\"\r\n              max=\"2022-12-31\"\r\n              onChange={dateChangeHandler}\r\n            />\r\n          </div>\r\n          <div className=\"new-expense__actions\">\r\n            <button type=\"submit\">Add expense</button>\r\n            <button type=\"button\" onClick={cancelButtonHandler}>\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React from \"react\";\r\nimport \"./NewExpense.css\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nconst NewExpense = (props) => {\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      <ExpenseForm onSaveExpenseData={saveExpenseDataHandler}></ExpenseForm>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import React, {useState} from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst STATIC_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n  const [expenses,setNewExpense] = useState(STATIC_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    \n    setNewExpense( prevExpenses => {\n      return [expense,...prevExpenses];\n    })\n  };\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler}></NewExpense>\n      <Expenses expenses={expenses}></Expenses>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}